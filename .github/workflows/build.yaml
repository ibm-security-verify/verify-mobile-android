# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: IBM Security Verify SDK release

on: 
  pull_request:
    types: [closed]
  push:
    branches:
    - main
    - develop
    - dev
    - '**'

jobs:    
  setup_environment:
    name: Setup environment
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1

      - name: Extract version
        id: set-vars
        run: |
          name="$(grep -o 'versionName.*' ./sdk/build.gradle.kts  | awk -F'\"' '{print $3}')"      
          echo "VersionName=$name" >> $GITHUB_OUTPUT
          code="$(grep -o 'versionCode.*' ./sdk/build.gradle.kts  | awk -F'\"' '{print $3}')"          
          echo "VersionCode=$code" >> $GITHUB_OUTPUT
          date="$(date +'%Y%m%d-%H%M%S')"
          echo "Date=$date" >> $GITHUB_OUTPUT
      - name: Set release title
        id: set-title
        run: |
          echo "ReleaseTitle=${{ steps.set-vars.outputs.VersionName }}-${{ steps.set-vars.outputs.VersionCode }}" >> $GITHUB_OUTPUT
    outputs:
      VERIFY_SDK_DATE: ${{ steps.set-vars.outputs.Date }}
      VERIFY_SDK_VERSION_CODE: ${{ steps.set-vars.outputs.VersionCode }}
      VERIFY_SDK_VERSION_NAME: ${{ steps.set-vars.outputs.VersionName }}    
      VERIFY_SDK_RELEASE_TITLE: ${{ steps.set-title.outputs.ReleaseTitle }}
          
  build_and_test:
    name: Build, unit test
    runs-on: ubuntu-latest
    needs: mend_scan

    steps:  
      - name: Code checkout
        uses: actions/checkout@v4.1.1

      - name: Install Java
        uses: actions/setup-java@v4.1.0
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3.2.0

      - name: Load cache
        uses: actions/cache@v4.0.1
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}      
   
      - name: Build SDKs
        working-directory: ./sdk
        run: ./gradlew --no-daemon assembleRelease

      - name: Publish SDKs to Maven local
        working-directory: ./sdk
        run: ./gradlew --no-daemon publishToMavenLocal

      - name: Generate SDK documentation
        working-directory: ./sdk
        run: ./gradlew --no-daemon dokkaJavadoc 

      - name: Run unit tests
        working-directory: ./sdk
        run: ./gradlew --no-daemon test

      - name: Store build and test artifacts
        uses: actions/upload-artifact@v4.3.1
        with:
          name: build-and-test
          path: |
            ./sdk/**/build/outputs/
            ./sdk/**/build/reports/

      - name: Store documentation
        uses: actions/upload-artifact@v4.3.1
        with:
          name: documentation
          path: ./sdk/**/build/dokka/       

      - name: Store Maven files
        uses: actions/upload-artifact@v4.3.1
        with:
          name: maven-local
          path: ~/.m2/repository/com/ibm/security

      - name: Publish to GitHub packages
        working-directory: ./sdk
        run: ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  coverage_report:
    name: Generate code coverage report
    runs-on: ubuntu-latest
    needs: [setup_environment, mend_scan]

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1

      - name: Install Java
        uses: actions/setup-java@v4.1.0
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Load cache
        uses: actions/cache@v4.0.1
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}      
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3.2.0
        with:
          api-level: 30
          target: default
          arch: x86_64
          profile: default

      - name: Generate Jacoco report
        uses: reactivecircus/android-emulator-runner@v2
        with:
          working-directory: ./sdk
          api-level: 28
          target: default
          arch: x86
          profile: Nexus 6
          script: ./gradlew --no-daemon jacocoReport

      - name: Store code coverage report
        uses: actions/upload-artifact@v4.3.1
        with:
          name: jacoco-report
          path: ./sdk/build/reports/jacoco/

      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        with:
          working-directory: ./sdk
          paths: |
            ${{ github.workspace }}/**/build/reports/jacoco/jacocoReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 0
          min-coverage-changed-files: 0
          title: Code Coverage
          update-comment: true
          debug-mode: true

  mend_scan:
    name: Mend scan
    runs-on: ubuntu-latest
    needs: setup_environment
    env: 
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      WS_APIKEY: ${{ secrets.WS_APIKEY }}
      WS_USERKEY: ${{ secrets.WS_USERKEY }}
      WS_PRODUCTNAME: ${{ secrets.WS_PRODUCTNAME }}
      WS_PROJECTNAME: ${{ secrets.WS_PROJECTNAME }}
      WS_WSS_URL: ${{ secrets.WS_WSS_URL }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 1
      
      - name: Install Java
        uses: actions/setup-java@v4.1.0
        with:
          java-version: '17'
          distribution: 'adopt'
  
      - name: Download the mend scan jar
        run: |
          curl -LJO https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar
    
      - name: Run the mend scan jar
        working-directory: ./sdk
        run: |
          java -jar ../wss-unified-agent.jar -d ${{ github.workspace }}  


  publish:
    name: Publish SDK, reports and documentation
    runs-on: ubuntu-latest
    needs: [setup_environment, build_and_test, mend_scan, coverage_report]

    steps:
      - name: Verify release title
        run: |
          echo "Version code:" ${{ needs.setup_environment.outputs.VERIFY_SDK_VERSION_CODE}}
          echo "Version name:" ${{ needs.setup_environment.outputs.VERIFY_SDK_VERSION_NAME}}
          echo "Timestamp" ${{ needs.setup_environment.outputs.VERIFY_SDK_DATE}}
          echo "Release title" ${{ needs.setup_environment.outputs.VERIFY_SDK_RELEASE_TITLE}}

      - name: Create SDK directory
        run: mkdir -p ./sdk

      - name: Collect all artificats
        uses: actions/download-artifact@v4.1.4
        with:
          name: build-and-test
          path: ./sdk

      - name: Collect documentation artificats
        uses: actions/download-artifact@v4.1.4
        with:
          name: documentation
          path: ./sdk     

      - name: Collect maven-local artificats
        uses: actions/download-artifact@v4.1.4
        with:
          name: maven-local
          path: ~/.m2/repository/com/ibm/security

      - name: Collect code coverate result
        uses: actions/download-artifact@v4.1.4
        with:
          name: jacoco-report
          path: ./sdk
    
      - name: Rename release files
        run: |
          mv ./sdk/core/build/outputs/aar/core-release.aar ./sdk/core/build/outputs/aar/IBM-Verify-SDK_core_${{ needs.setup_environment.outputs.VERIFY_SDK_RELEASE_TITLE}}_${{ needs.setup_environment.outputs.VERIFY_SDK_DATE}}_release.aar  
          mv ./sdk/fido2/build/outputs/aar/fido2-release.aar ./sdk/fido2/build/outputs/aar/IBM-Verify-SDK_fido2_${{ needs.setup_environment.outputs.VERIFY_SDK_RELEASE_TITLE}}_${{ needs.setup_environment.outputs.VERIFY_SDK_DATE}}_release.aar  
          mv ./sdk/adaptive/build/outputs/aar/adaptive-release.aar ./sdk/adaptive/build/outputs/aar/IBM-Verify-SDK_adaptive_${{ needs.setup_environment.outputs.VERIFY_SDK_RELEASE_TITLE}}_${{ needs.setup_environment.outputs.VERIFY_SDK_DATE}}_release.aar  
          mv ./sdk/authentication/build/outputs/aar/authentication-release.aar ./sdk/authentication/build/outputs/aar/IBM-Verify-SDK_authentication_${{ needs.setup_environment.outputs.VERIFY_SDK_RELEASE_TITLE}}_${{ needs.setup_environment.outputs.VERIFY_SDK_DATE}}_release.aar  
          mv ./sdk/mfa/build/outputs/aar/mfa-release.aar ./sdk/mfa/build/outputs/aar/IBM-Verify-SDK_mfa_${{ needs.setup_environment.outputs.VERIFY_SDK_RELEASE_TITLE}}_${{ needs.setup_environment.outputs.VERIFY_SDK_DATE}}_release.aar  


      - name: Move maven files to accessible folder
        run: |
          mkdir -p ./sdk/maven 
          mv ~/.m2/repository/com/ibm/security/verifysdk/core/${{ needs.setup_environment.outputs.VERIFY_SDK_VERSION_NAME}}/* ./sdk/maven/
          mv ~/.m2/repository/com/ibm/security/verifysdk/fido2/${{ needs.setup_environment.outputs.VERIFY_SDK_VERSION_NAME}}/* ./sdk/maven/
          mv ~/.m2/repository/com/ibm/security/verifysdk/adaptive/${{ needs.setup_environment.outputs.VERIFY_SDK_VERSION_NAME}}/*  ./sdk/maven/
          mv ~/.m2/repository/com/ibm/security/verifysdk/authentication/${{ needs.setup_environment.outputs.VERIFY_SDK_VERSION_NAME}}/*  ./sdk/maven/
          mv ~/.m2/repository/com/ibm/security/verifysdk/mfa/${{ needs.setup_environment.outputs.VERIFY_SDK_VERSION_NAME}}/*  ./sdk/maven/


      - name: Update documentation folder structure for GitHub commit
        run: |
          mkdir -p ./sdk/documentation/android/core/docs
          mkdir -p ./sdk/documentation/android/fido2/docs
          mkdir -p ./sdk/documentation/android/adaptive/docs
          mkdir -p ./sdk/documentation/android/authentication/docs
          mkdir -p ./sdk/documentation/android/mfa/docs
          mv ./sdk/core/build/dokka/javadoc/* ./sdk/documentation/android/core/docs/
          mv ./sdk/fido2/build/dokka/javadoc/* ./sdk/documentation/android/fido2/docs/
          mv ./sdk/adaptive/build/dokka/javadoc/* ./sdk/documentation/android/adaptive/docs/
          mv ./sdk/authentication/build/dokka/javadoc/* ./sdk/documentation/android/authentication/docs/
          mv ./sdk/mfa/build/dokka/javadoc/* ./sdk/documentation/android/mfa/docs/


      - name: Zip code coverage report
        run: cd ./sdk/html && zip -r ../IBM-Verify-SDK_${{ needs.setup_environment.outputs.VERIFY_SDK_RELEASE_TITLE}}_${{ needs.setup_environment.outputs.VERIFY_SDK_DATE}}_code-coverage-report.zip *

      - name: Create GitHub release
        uses: softprops/action-gh-release@4634c16e79c963813287e889244c50009e7f0981
        with:
          name: v${{ needs.setup_environment.outputs.VERIFY_SDK_RELEASE_TITLE}}
          tag_name: ${{ needs.setup_environment.outputs.VERIFY_SDK_RELEASE_TITLE}}
          draft: true
          files: |
            ./sdk/maven/*.*
            ./sdk/core/build/outputs/aar/*.aar
            ./sdk/core/build/reports/*.html
            ./sdk/fido2/build/outputs/aar/*.aar
            ./sdk/fido2/build/reports/*.html
            ./sdk/adaptive/build/outputs/aar/*.aar
            ./sdk/adaptive/build/reports/*.html
            ./sdk/authentication/build/outputs/aar/*.aar
            ./sdk/authentication/build/reports/*.html
            ./sdk/mfa/build/outputs/aar/*.aar
            ./sdk/mfa/build/reports/*.html
            ./sdk/IBM-Verify-SDK_*_code-coverage-report.zip

      - name: Upload documentation to GitHub.io repo
        if: github.ref == 'refs/heads/main'      
        uses: cpina/github-action-push-to-another-repository@v1.7.2
        env: 
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        with: 
          source-directory: './sdk/documentation/android'
          destination-github-username: 'ibm-security-verify'
          destination-repository-name: 'ibm-security-verify.github.io'
          user-email: chageman@au1.ibm.com
          target-branch: android_sdk_v3
          target-directory: 'android'
  
  job_summary:
    name: Update job summary
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Git checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 3
      - name: Add markdown
        run: |
          echo '## Build Summary :white_check_mark:' >> $GITHUB_STEP_SUMMARY
          echo '### Documentation' >> $GITHUB_STEP_SUMMARY
          echo 'The documentation has been successfully created, and can be accessed [here.](https://ibm-security-verify.github.io/)' >> $GITHUB_STEP_SUMMARY
          echo '### Files Changed' >> $GITHUB_STEP_SUMMARY
          echo -n 'Count: '  >> $GITHUB_STEP_SUMMARY
          git diff --name-only HEAD~ | wc -l | awk '{$1=$1;print}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          git diff --name-only HEAD~ >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY